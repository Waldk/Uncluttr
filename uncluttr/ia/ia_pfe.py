# -*- coding: utf-8 -*-
"""IA PFE.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1shd8M_YKK_X3xRpzT44JosxCAr2g-NAQ
"""

# !pip install pytesseract
# !pip install pdf2image
# !pip install transformers
# !pip install spacy
# !python -m spacy download fr_core_news_sm
# !apt-get install -y poppler-utils
# !apt-get install -y tesseract-ocr-fra

import fitz  # PyMuPDF pour lire les PDF
import easyocr  # OCR sans Tesseract
import spacy
from collections import Counter
import re
import os

# Télécharger le modèle spaCy si nécessaire
def check_and_download_dependencies():
    try:
        spacy.cli.download("fr_core_news_sm")
    except Exception as e:
        print("Erreur lors du téléchargement du modèle spaCy:", e)

check_and_download_dependencies()

# Charger le modèle spaCy pour le français
nlp = spacy.load("fr_core_news_sm")

# Liste de mots-clés pour chaque type de document
document_keywords = {
    "Procédure, méthode, guide": ["procédure", "méthode", "guide", "instructions", "étapes", "processus", "fonctionnement"],
    "CV": ["compétences", "expérience", "formation", "objectif", "parcours", "CV", "candidat", "recrutement"],
    "Lettre de motivation": ["motivation", "candidature", "poste", "entreprise", "recrutement", "compétences", "intérêt", "travailler"],
    "Contrat": ["accord", "engagement", "clause", "signature", "responsabilité", "conditions", "parties"],
    "Fiche de paie": ["salaire", "net", "brut", "cotisations", "charges sociales", "rémunération"],
    "Devis": ["estimation", "prix", "proposition", "offre", "coût", "service", "quantité"],
    "Facture": ["facture", "paiement", "montant", "produit", "service", "date", "référence"],
    "Bon de commandes": ["commande", "produit", "quantité", "prix", "bon", "livraison"],
    "Attestation": ["attestation", "certification", "déclaration", "preuve", "confirmation"]
}

# Fonction pour extraire le texte d'un PDF avec PyMuPDF
def extract_text_from_pdf(pdf_path):
    if not os.path.exists(pdf_path):
        raise FileNotFoundError(f"Le fichier spécifié n'existe pas : {pdf_path}")
    doc = fitz.open(pdf_path)
    text = ""
    for page in doc:
        text += page.get_text()  # Extraire le texte de chaque page
    doc.close()
    return text

# OCR avec EasyOCR pour les PDF contenant des images
def ocr_with_easyocr(pdf_path):
    reader = easyocr.Reader(["fr"])  # Supporte le français
    results = reader.readtext(pdf_path, detail=0)
    return " ".join(results)

# Prétraitement du texte
def preprocess_text(text):
    text = re.sub(r'[^a-zA-Z\s]', '', text.lower())  # Nettoyer les caractères inutiles
    doc = nlp(text)
    lemmatized_text = ' '.join([token.lemma_ for token in doc if not token.is_stop])
    return lemmatized_text

# Extraction des mots les plus fréquents
def get_most_frequent_words(text, top_n=10):
    words = text.split()
    word_counts = Counter(words)
    return word_counts.most_common(top_n)

# Identification de la catégorie de document
def choose_document_tag(frequent_words):
    document_tags = []
    for tag, keywords in document_keywords.items():
        common_keywords = [word for word in frequent_words if word in keywords]
        if common_keywords:
            document_tags.append((tag, len(common_keywords)))
    if document_tags:
        document_tags.sort(key=lambda x: x[1], reverse=True)
        return document_tags[0][0]
    return "Document inconnu"

# Pipeline principal
def process_document(pdf_path):
    try:
        extracted_text = extract_text_from_pdf(pdf_path)
        if not extracted_text.strip():
            # Si aucun texte n'est trouvé, utiliser l'OCR
            extracted_text = ocr_with_easyocr(pdf_path)
        cleaned_text = preprocess_text(extracted_text)
        frequent_words = get_most_frequent_words(cleaned_text)
        document_tag = choose_document_tag([word[0] for word in frequent_words])
        return document_tag
    except Exception as e:
        return f"Erreur lors du traitement du document : {e}"

# Exemple d'utilisation
if __name__ == "__main__":
    # Remplacez ce chemin par le chemin de votre fichier PDF
    pdf_path = "C:/Users/cerin/OneDrive/Bureau/Uncluttr/uncluttr/ia/Motivation.pdf"
    document_tag = process_document(pdf_path)
    print("Le document appartient à la catégorie :", document_tag)
